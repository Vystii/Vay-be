# Generated by Django 5.1.2 on 2025-01-04 06:13

import course_manager.models
import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('v_utilities', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='uploads/pdfs/', validators=[course_manager.models.validate_pdf], verbose_name='file')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.IntegerField(verbose_name='note')),
            ],
        ),
        migrations.CreateModel(
            name='NoteType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(default=None, max_length=50, verbose_name='Label')),
                ('percentage', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(100)], verbose_name='percentage')),
            ],
            options={
                'verbose_name': 'Type de note',
                'verbose_name_plural': 'types de notes',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_ue', models.CharField(max_length=8, validators=[django.core.validators.RegexValidator(message='The UE code must start with 3 letters followed by 3 or 4 numbers', regex='^[A-Z]{3,4}\\d{3,4}$')], verbose_name='code ue')),
                ('year', models.IntegerField(choices=[(1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025)], default=2025, verbose_name='year')),
                ('label', models.CharField(default=None, max_length=50, verbose_name='course label')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='description')),
                ('status', models.BooleanField(default=True, verbose_name='status')),
                ('study_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='v_utilities.studyfield', verbose_name='study field')),
                ('study_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='v_utilities.studylevel', verbose_name='studies level')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
